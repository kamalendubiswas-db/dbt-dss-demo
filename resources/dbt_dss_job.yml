resources:
  jobs:
    dbt_dss_job:
      name: dbt_dss_job
      tasks:
        - task_key: dbt_dss_job
          dbt_task:
            project_directory: ""
            commands:
              - dbt deps
              - dbt build --target-path /Volumes/${var.dbt_catalog}/bronze/dbt_artefacts/${bundle.git.branch}/main_run
            warehouse_id: ${var.warehouse_id} 
            catalog: ${var.dbt_catalog}
          job_cluster_key: dbt_CLI
          libraries:
            - pypi:
                package: dbt-databricks>=1.0.0,<2.0.0
        - task_key: dbt_repair_run
          depends_on:
            - task_key: dbt_dss_job
          run_if: ALL_FAILED
          dbt_task:
            project_directory: ""
            commands:
              - dbt deps
              - dbt build --select "result:error+ 1+result:fail" --defer --state /Volumes/${var.dbt_catalog}/bronze/dbt_artefacts/${bundle.git.branch}/main_run --target-path /Volumes/${var.dbt_catalog}/bronze/dbt_artefacts/${bundle.git.branch}/repair_run
            warehouse_id: 2e78d4a8647e3893
          job_cluster_key: dbt_CLI
          libraries:
            - pypi:
                package: dbt-databricks>=1.0.0,<2.0.0
      job_clusters:
        - job_cluster_key: dbt_CLI
          new_cluster:
            spark_version: 13.3.x-scala2.12
            spark_conf:
              spark.master: local[*, 4]
              spark.databricks.cluster.profile: singleNode
            azure_attributes:
              first_on_demand: 1
              availability: ON_DEMAND_AZURE
              spot_bid_max_price: -1
            node_type_id: Standard_DS3_v2
            custom_tags:
              ResourceClass: SingleNode
            spark_env_vars:
              PYSPARK_PYTHON: /databricks/python3/bin/python3
            enable_elastic_disk: true
            data_security_mode: SINGLE_USER
            runtime_engine: PHOTON
            num_workers: 0
      git_source:
        git_url: https://github.com/kamalendubiswas-db/dbt-dss-demo
        git_provider: gitHub
        git_branch: ${bundle.git.branch}
